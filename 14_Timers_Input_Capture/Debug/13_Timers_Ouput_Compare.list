
13_Timers_Ouput_Compare.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001bc  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000354  0800035c  0001035c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000354  08000354  0001035c  2**0
                  CONTENTS
  4 .ARM          00000000  08000354  08000354  0001035c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000354  0800035c  0001035c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000354  08000354  00010354  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000358  08000358  00010358  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001035c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800035c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800035c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001035c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0001038c  2**0
                  CONTENTS, READONLY
 13 .debug_info   000004c4  00000000  00000000  000103cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000123  00000000  00000000  00010893  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000070  00000000  00000000  000109b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000046  00000000  00000000  00010a28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000d89  00000000  00000000  00010a6e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d1a  00000000  00000000  000117f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000535e3  00000000  00000000  00012511  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000000a8  00000000  00000000  00065af4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000081  00000000  00000000  00065b9c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800033c 	.word	0x0800033c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	0800033c 	.word	0x0800033c

080001d8 <main>:
#define PIN5					(1U<<5)
#define LED_PIN					PIN5


int main(void)
{
 80001d8:	b580      	push	{r7, lr}
 80001da:	af00      	add	r7, sp, #0
	tim2_pa5_output_compare();
 80001dc:	f000 f802 	bl	80001e4 <tim2_pa5_output_compare>

	while(1)
 80001e0:	e7fe      	b.n	80001e0 <main+0x8>
	...

080001e4 <tim2_pa5_output_compare>:
	//ENABLE TIMER
	TIM2->CR1 |= CR1_CEN;
}

void tim2_pa5_output_compare(void)
{
 80001e4:	b480      	push	{r7}
 80001e6:	af00      	add	r7, sp, #0
	//ENABLE CLOCK ACCESS TO GPIOA
	RCC->AHB1ENR |= GPIOAEN;
 80001e8:	4b2b      	ldr	r3, [pc, #172]	; (8000298 <tim2_pa5_output_compare+0xb4>)
 80001ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001ec:	4a2a      	ldr	r2, [pc, #168]	; (8000298 <tim2_pa5_output_compare+0xb4>)
 80001ee:	f043 0301 	orr.w	r3, r3, #1
 80001f2:	6313      	str	r3, [r2, #48]	; 0x30

	//SET PA5 MODE TO ALTERNATE MODE
	GPIOA->MODER |=  (1U<<11);
 80001f4:	4b29      	ldr	r3, [pc, #164]	; (800029c <tim2_pa5_output_compare+0xb8>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	4a28      	ldr	r2, [pc, #160]	; (800029c <tim2_pa5_output_compare+0xb8>)
 80001fa:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80001fe:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~ (1U<<10);
 8000200:	4b26      	ldr	r3, [pc, #152]	; (800029c <tim2_pa5_output_compare+0xb8>)
 8000202:	681b      	ldr	r3, [r3, #0]
 8000204:	4a25      	ldr	r2, [pc, #148]	; (800029c <tim2_pa5_output_compare+0xb8>)
 8000206:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800020a:	6013      	str	r3, [r2, #0]

	//SET PA5 ALTERNATE FUNCTION TYPE TO TIM2_CH1
	GPIOA->AFR[0] |= (1U<<20);
 800020c:	4b23      	ldr	r3, [pc, #140]	; (800029c <tim2_pa5_output_compare+0xb8>)
 800020e:	6a1b      	ldr	r3, [r3, #32]
 8000210:	4a22      	ldr	r2, [pc, #136]	; (800029c <tim2_pa5_output_compare+0xb8>)
 8000212:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000216:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &=~ (1U<<21);
 8000218:	4b20      	ldr	r3, [pc, #128]	; (800029c <tim2_pa5_output_compare+0xb8>)
 800021a:	6a1b      	ldr	r3, [r3, #32]
 800021c:	4a1f      	ldr	r2, [pc, #124]	; (800029c <tim2_pa5_output_compare+0xb8>)
 800021e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8000222:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &=~ (1U<<22);
 8000224:	4b1d      	ldr	r3, [pc, #116]	; (800029c <tim2_pa5_output_compare+0xb8>)
 8000226:	6a1b      	ldr	r3, [r3, #32]
 8000228:	4a1c      	ldr	r2, [pc, #112]	; (800029c <tim2_pa5_output_compare+0xb8>)
 800022a:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 800022e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &=~ (1U<<23);
 8000230:	4b1a      	ldr	r3, [pc, #104]	; (800029c <tim2_pa5_output_compare+0xb8>)
 8000232:	6a1b      	ldr	r3, [r3, #32]
 8000234:	4a19      	ldr	r2, [pc, #100]	; (800029c <tim2_pa5_output_compare+0xb8>)
 8000236:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800023a:	6213      	str	r3, [r2, #32]

	//ENABLE CLOCK ACCESS TO APB1
	RCC->APB1ENR |= TIM2EN_CLK;
 800023c:	4b16      	ldr	r3, [pc, #88]	; (8000298 <tim2_pa5_output_compare+0xb4>)
 800023e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000240:	4a15      	ldr	r2, [pc, #84]	; (8000298 <tim2_pa5_output_compare+0xb4>)
 8000242:	f043 0301 	orr.w	r3, r3, #1
 8000246:	6413      	str	r3, [r2, #64]	; 0x40

	//SET THE PRESCALER VALUE
	TIM2->PSC = 1600 - 1; // 16MHz/1600Hz
 8000248:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800024c:	f240 623f 	movw	r2, #1599	; 0x63f
 8000250:	629a      	str	r2, [r3, #40]	; 0x28

	//SET THE AUTORELOAD VALUE
	TIM2->ARR = 10000 - 1;
 8000252:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000256:	f242 720f 	movw	r2, #9999	; 0x270f
 800025a:	62da      	str	r2, [r3, #44]	; 0x2c

	//SET OUTPUT COMPARE TOGGLE MODE
	TIM2->CCMR1 = OC_TOGGLE;
 800025c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000260:	2230      	movs	r2, #48	; 0x30
 8000262:	619a      	str	r2, [r3, #24]

	//ENABLE TIM2 CH1 IN COMPARE MODE
	TIM2->CCER |= CCER_CC1E;
 8000264:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000268:	6a1b      	ldr	r3, [r3, #32]
 800026a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800026e:	f043 0301 	orr.w	r3, r3, #1
 8000272:	6213      	str	r3, [r2, #32]

	//CLEAR COUNTER
	TIM2->CNT = 0x00;
 8000274:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000278:	2200      	movs	r2, #0
 800027a:	625a      	str	r2, [r3, #36]	; 0x24

	//ENABLE TIMER
	TIM2->CR1 |= CR1_CEN;
 800027c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000286:	f043 0301 	orr.w	r3, r3, #1
 800028a:	6013      	str	r3, [r2, #0]
}
 800028c:	bf00      	nop
 800028e:	46bd      	mov	sp, r7
 8000290:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000294:	4770      	bx	lr
 8000296:	bf00      	nop
 8000298:	40023800 	.word	0x40023800
 800029c:	40020000 	.word	0x40020000

080002a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a0:	480d      	ldr	r0, [pc, #52]	; (80002d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002a2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002a4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a8:	480c      	ldr	r0, [pc, #48]	; (80002dc <LoopForever+0x6>)
  ldr r1, =_edata
 80002aa:	490d      	ldr	r1, [pc, #52]	; (80002e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002ac:	4a0d      	ldr	r2, [pc, #52]	; (80002e4 <LoopForever+0xe>)
  movs r3, #0
 80002ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b0:	e002      	b.n	80002b8 <LoopCopyDataInit>

080002b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002b6:	3304      	adds	r3, #4

080002b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002bc:	d3f9      	bcc.n	80002b2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002be:	4a0a      	ldr	r2, [pc, #40]	; (80002e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c0:	4c0a      	ldr	r4, [pc, #40]	; (80002ec <LoopForever+0x16>)
  movs r3, #0
 80002c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c4:	e001      	b.n	80002ca <LoopFillZerobss>

080002c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c8:	3204      	adds	r2, #4

080002ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002cc:	d3fb      	bcc.n	80002c6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ce:	f000 f811 	bl	80002f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002d2:	f7ff ff81 	bl	80001d8 <main>

080002d6 <LoopForever>:

LoopForever:
  b LoopForever
 80002d6:	e7fe      	b.n	80002d6 <LoopForever>
  ldr   r0, =_estack
 80002d8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e4:	0800035c 	.word	0x0800035c
  ldr r2, =_sbss
 80002e8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002ec:	2000001c 	.word	0x2000001c

080002f0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f0:	e7fe      	b.n	80002f0 <ADC_IRQHandler>
	...

080002f4 <__libc_init_array>:
 80002f4:	b570      	push	{r4, r5, r6, lr}
 80002f6:	4d0d      	ldr	r5, [pc, #52]	; (800032c <__libc_init_array+0x38>)
 80002f8:	4c0d      	ldr	r4, [pc, #52]	; (8000330 <__libc_init_array+0x3c>)
 80002fa:	1b64      	subs	r4, r4, r5
 80002fc:	10a4      	asrs	r4, r4, #2
 80002fe:	2600      	movs	r6, #0
 8000300:	42a6      	cmp	r6, r4
 8000302:	d109      	bne.n	8000318 <__libc_init_array+0x24>
 8000304:	4d0b      	ldr	r5, [pc, #44]	; (8000334 <__libc_init_array+0x40>)
 8000306:	4c0c      	ldr	r4, [pc, #48]	; (8000338 <__libc_init_array+0x44>)
 8000308:	f000 f818 	bl	800033c <_init>
 800030c:	1b64      	subs	r4, r4, r5
 800030e:	10a4      	asrs	r4, r4, #2
 8000310:	2600      	movs	r6, #0
 8000312:	42a6      	cmp	r6, r4
 8000314:	d105      	bne.n	8000322 <__libc_init_array+0x2e>
 8000316:	bd70      	pop	{r4, r5, r6, pc}
 8000318:	f855 3b04 	ldr.w	r3, [r5], #4
 800031c:	4798      	blx	r3
 800031e:	3601      	adds	r6, #1
 8000320:	e7ee      	b.n	8000300 <__libc_init_array+0xc>
 8000322:	f855 3b04 	ldr.w	r3, [r5], #4
 8000326:	4798      	blx	r3
 8000328:	3601      	adds	r6, #1
 800032a:	e7f2      	b.n	8000312 <__libc_init_array+0x1e>
 800032c:	08000354 	.word	0x08000354
 8000330:	08000354 	.word	0x08000354
 8000334:	08000354 	.word	0x08000354
 8000338:	08000358 	.word	0x08000358

0800033c <_init>:
 800033c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800033e:	bf00      	nop
 8000340:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000342:	bc08      	pop	{r3}
 8000344:	469e      	mov	lr, r3
 8000346:	4770      	bx	lr

08000348 <_fini>:
 8000348:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800034a:	bf00      	nop
 800034c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800034e:	bc08      	pop	{r3}
 8000350:	469e      	mov	lr, r3
 8000352:	4770      	bx	lr
